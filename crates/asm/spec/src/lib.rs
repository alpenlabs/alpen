//! ASM specification for the Strata protocol.
//!
//! This crate provides the concrete ASM (Application-Specific Module) specification
//! for Strata, including magic bytes, subprotocol implementations, and genesis
//! configurations dynamically generated at build time from rollup parameters.

use strata_asm_common::{AsmSpec, GenesisProvider, Stage, Subprotocol};
use strata_asm_proto_bridge_v1::{BridgeV1GenesisConfig, BridgeV1Subproto};
use strata_asm_proto_core::{CoreGenesisConfig, OLCoreSubproto};
use strata_l1_txfmt::MagicBytes;

// Include generated constants from build script
include!(concat!(env!("OUT_DIR"), "/generated.rs"));

/// ASM spec for the Strata protocol.
///
/// Configuration is loaded at compile time from rollup_params.json (generated by datatool).
/// Magic bytes, genesis configurations, and other parameters are extracted from rollup parameters.
#[derive(Debug)]
pub struct StrataAsmSpec;

impl AsmSpec for StrataAsmSpec {
    const MAGIC_BYTES: MagicBytes = MAGIC_BYTES;

    fn genesis_config_for<S: Subprotocol>() -> S::GenesisConfig
    where
        Self: GenesisProvider<S>,
    {
        <Self as GenesisProvider<S>>::genesis_config()
    }

    fn call_subprotocols(stage: &mut impl Stage<Self>) {
        stage.process_subprotocol::<OLCoreSubproto>();
        stage.process_subprotocol::<BridgeV1Subproto>();
    }
}

// Implement GenesisProvider for each subprotocol using generated config functions
impl GenesisProvider<OLCoreSubproto> for StrataAsmSpec {
    fn genesis_config() -> CoreGenesisConfig {
        CoreGenesisConfig::new(
            core_genesis::checkpoint_vk(),
            core_genesis::genesis_l1_block(),
            core_genesis::sequencer_pubkey(),
        )
        .expect("Failed to create CoreGenesisConfig from generated config")
    }
}

impl GenesisProvider<BridgeV1Subproto> for StrataAsmSpec {
    fn genesis_config() -> BridgeV1GenesisConfig {
        // Currently using default as bridge config is not fully implemented
        // Future: use bridge_genesis::* generated functions
        BridgeV1GenesisConfig::default()
    }
}
