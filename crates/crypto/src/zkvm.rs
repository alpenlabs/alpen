use strata_primitives::proof::RollupVerifyingKey;
use zkaleido::ProofReceipt;
use zkaleido_risc0_adapter::verify_groth16 as verify_risc0_groth16;
use zkaleido_sp1_adapter::verify_groth16 as verify_sp1_groth16;

/// Verifies a zkVM Groth16 proof receipt using the provided rollup verifying key.
///
/// This function takes a `ProofReceipt` generated by a zero-knowledge virtual machine (zkVM)
/// and a corresponding [`RollupVerifyingKey`].
///
/// Depending on the type of verifying key, the function dispatches the verification to the
/// corresponding Groth16 verification function. If the verification process returns `Ok`,
/// the proof is considered valid (returns `true`); otherwise, it returns `false`.
pub fn verify_zkvm_groth16_proof_receipt(receipt: &ProofReceipt, vk: &RollupVerifyingKey) -> bool {
    match vk {
        // For native mode, no actual Groth16 receipt is produced,
        // so we accept the proof receipt by default.
        RollupVerifyingKey::NativeVerifyingKey(_) => true,
        RollupVerifyingKey::Risc0VerifyingKey(key) => verify_risc0_groth16(receipt, &key.0).is_ok(),
        RollupVerifyingKey::SP1VerifyingKey(key) => verify_sp1_groth16(receipt, &key.0).is_ok(),
    }
}
