# This workflow is triggered when a new commit is made on main branch or manually triggered.
# It builds and pushes the Docker images. Afterwards updates the Helm values with the new Docker
# image tags and commits and pushes the changes to the deployments repo.

name: Continuous Deployment
on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment"
        required: true
        default: "staging"
        type: choice
        options:
          - staging

env:
  CI: false
  COMMIT: ${{ github.sha }}

permissions:
  contents: read
  pull-requests: read

jobs:
  build-and-push:
    permissions:
      id-token: write
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || (github.ref == 'refs/heads/main' && 'staging') }}
    strategy:
      matrix:
        # The names of the programs must match the names of the directories that we
        # are building the Docker images from.
        # The directories `bin` and `docker` must contain the subdirectories in the
        # matrix below.
        program:
          [strata-client, strata-sequencer-client, strata-reth, prover-client]
    outputs:
      program: ${{ matrix.program }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Configure AWS ECR Details
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ECR_ROLE }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "true"
      - name: Build and push Docker image
        id: build-and-push
        # build and push the Docker image for every program
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY_PREFIX: ${{ vars.ECR_REPOSITORY_PREFIX }}
        run: |
          SHORT_TAG="${COMMIT//[^a-zA-Z0-9._-]/}"
          SHORT_TAG="${SHORT_TAG:0:7}"
          PROGRAM="${{ matrix.program }}"

          echo "Building and pushing \"$PROGRAM\" image with tag \"$SHORT_TAG\""

          DOCKERFILE_PATH="docker/${PROGRAM}/Dockerfile"
          ECR_REPOSITORY="${ECR_REPOSITORY_PREFIX}/${PROGRAM}"

          docker build -t "${ECR_REGISTRY}/${ECR_REPOSITORY}:${SHORT_TAG}" -f "${DOCKERFILE_PATH}" .
          docker push "${ECR_REGISTRY}/${ECR_REPOSITORY}:${SHORT_TAG}"

  update-helm-values:
    name: Update Helm Values
    needs: [build-and-push]
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || (github.ref == 'refs/heads/main' && 'staging') }}
    steps:
      - name: Set up SSH for private repo access
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOYMENTS_REPO_WRITE }}
      - name: Clone deployments repo (specific branch)
        env:
          BRANCH_OF_DEPLOYMENT_REPO: ${{ vars.BRANCH_OF_DEPLOYMENT_REPO }}
        run: |
          git clone --depth=1 --branch "$BRANCH_OF_DEPLOYMENT_REPO" git@github.com:alpenlabs/deployments.git deployments
          cd deployments || exit
          git checkout "$BRANCH_OF_DEPLOYMENT_REPO"

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Update Docker image tag in Helm values
        env:
          SHORT_TAG: ${{ github.sha }}
          CLUSTER_NAME: ${{ vars.CLUSTER_NAME }}
        run: |
          # Sanitize SHORT_TAG
          SHORT_TAG="${COMMIT//[^a-zA-Z0-9._-]/}"
          SHORT_TAG="${SHORT_TAG:0:7}"

          VALUES_FILE_NODES="deployments/clusters/${CLUSTER_NAME}/values/strata-nodes-values.yaml"
          VALUES_FILE_PROVER="deployments/clusters/${CLUSTER_NAME}/values/strata-prover-values.yaml"

          # update sequencer tags
          yq eval -i --arg tag "$SHORT_TAG" ".client.image.tag = $tag" "$VALUES_FILE_NODES"
          yq eval -i --arg tag "$SHORT_TAG" ".reth.image.tag = $tag" "$VALUES_FILE_NODES"
          yq eval -i --arg tag "$SHORT_TAG" ".sequencerSigner.image.tag = $tag" "$VALUES_FILE_NODES"

          # update prover tags
          yq eval -i --arg tag "$SHORT_TAG" ".proverClient.image.tag = $tag" "$VALUES_FILE_PROVER"

      - name: Commit and push changes
        env:
          SHORT_TAG: ${{ github.sha }}
          GH_ACTIONS_USER_NAME: ${{ vars.GH_ACTIONS_USER_NAME }}
          CLUSTER_NAME: ${{ vars.CLUSTER_NAME }}
          BRANCH_OF_DEPLOYMENT_REPO: ${{ vars.BRANCH_OF_DEPLOYMENT_REPO }}
        run: |
          SHORT_TAG="${COMMIT//[^a-zA-Z0-9._-]/}"
          SHORT_TAG="${SHORT_TAG:0:7}"

          cd deployments || exit
          git config user.name "$GH_ACTIONS_USER_NAME"
          git config user.email "$GH_ACTIONS_USER_NAME@alpenlabs.io"

          # only if there is a change in any of the values file, commit and push
          if git diff --quiet; then
            echo "No changes to commit."
          else
            git add "clusters/$CLUSTER_NAME/values"
            git commit -m "Update image tags to \"$SHORT_TAG\"."
            git pull --rebase origin "$BRANCH_OF_DEPLOYMENT_REPO"
            git push origin "$BRANCH_OF_DEPLOYMENT_REPO"
          fi
